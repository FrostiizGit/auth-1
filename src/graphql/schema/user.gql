type Session {
  ip: String!
  browserName: String
  osName: String
  deviceModel: String
  deviceType: String
  deviceVendor: String
}

enum Code {
  RESET_PWD
  CONFIRM_EMAIL
}

type User {
  id: ID!
  sessions: [Session!]!
  verified: Boolean!
}

type UserOps {
  sendCode(code: Code!, email: String!): Boolean # void
	resetPassword(email: String!, newPwd: String!, resetCode: String!): Boolean # void
  confirmEmail(code: String!): Boolean # void
	inviteUser(email: String!): String # jwt with id of invited user or null if it already exist
}

extend type Query {
	# hello user
	me: User! @Auth
}

extend type Mutation {
  me: UserOps! @Auth
  refreshMe: String @Auth(canAccessTokenBeExpired: true)
}