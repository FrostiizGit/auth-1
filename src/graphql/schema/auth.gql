enum Provider {
	GOOGLE
	# TWITTER
	# FACEBOOK
	# GITHUB
}

type AuthResponse {
	user: User!
	newAccount: Boolean! # was it a registration ?
	newSession: Boolean! # was it a non existing session ? usefull to implement security later
}

type AuthType {
	local: Local!
	sso: Sso!
}

input Creds {
	email: String!
	pwd: String!
	rememberMe: Boolean
}

type Local {
	signin(creds: Creds!): AuthResponse!
	signup(creds: Creds!): AuthResponse!
}

type Sso {
	sign(provider: Provider!, idToken: String!): AuthResponse!
}

# I CAN'T RETURN AN INTERFACE TO QUERY MORE, I HAVE TO IMPLEM
# authenticate(type)
type Mutation {
	authenticate: AuthType!
	signout: String @Auth(canAccessTokenBeExpired: true)
}